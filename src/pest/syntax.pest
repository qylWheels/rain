WHITESPACE = _{ WHITE_SPACE }

// Trival lexical elements.
int = @{ "-"? ~ ASCII_DIGIT+ }
id = @{ ASCII_ALPHA+ }

// Keywords.
if = _{ "if" }
then = _{ "then" }
else = _{ "else" }
true = { "true" }
false = { "false" }
let = _{ "let" }
in = _{ "in" }

// Operators.
binop = _{ plus | times | le }
plus = { "+" }
times = { "*" }
le = { "<=" }
assign = _{ "=" }

// Parentheses.
lparen = _{ "(" }
rparen = _{ ")" }

// Syntax.
let_expr = { let ~ id ~ assign ~ expr ~ in ~ expr }
if_expr = { if ~ expr ~ then ~ expr ~ else ~ expr }
binop_expr = { binop ~ expr ~ binop_expr | "" }
expr = _{
    (
        int
        | true
        | false
        | let_expr
        | if_expr
        | id
        | lparen ~ expr ~ rparen
    ) ~ binop_expr
}

prog = _{ SOI ~ expr ~ EOI }
